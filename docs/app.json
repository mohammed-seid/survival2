[{"name":"app.R","content":"# ETH 2025 Survival Survey Dashboard - Shinylive Optimized\n# Revision Date: 2025-01-16\n# Description: A fully shinylive-compatible dashboard with enhanced analytics and interactivity\n\n# --- Core Libraries (Shinylive Compatible) ---\nlibrary(shiny)\nlibrary(bslib)\nlibrary(plotly)\nlibrary(DT)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(lubridate)\nlibrary(stringr)\n\n# --- Custom Color Palette ---\ncustom_colors <- list(\n  primary = \"#2E8B57\",\n  secondary = \"#20B2AA\", \n  success = \"#28a745\",\n  warning = \"#ffc107\",\n  danger = \"#dc3545\",\n  info = \"#17a2b8\",\n  light = \"#f8f9fa\",\n  dark = \"#343a40\",\n  gradient = c(\"#2E8B57\", \"#20B2AA\", \"#66CDAA\", \"#98FB98\", \"#90EE90\")\n)\n\n# --- Helper Functions ---\nformat_percent <- function(x, digits = 1) {\n  paste0(round(x * 100, digits), \"%\")\n}\n\nformat_number <- function(x, digits = 0) {\n  format(round(x, digits), big.mark = \",\", scientific = FALSE)\n}\n\nsafe_mean <- function(x, na.rm = TRUE) {\n  if(length(x) == 0 || all(is.na(x))) return(0)\n  mean(x, na.rm = na.rm)\n}\n\nsafe_sum <- function(x, na.rm = TRUE) {\n  if(length(x) == 0 || all(is.na(x))) return(0)\n  sum(x, na.rm = na.rm)\n}\n\n# --- Data Loading with Error Handling ---\nload_data <- function() {\n  tryCatch({\n    # Try to load the RDS file\n    if(file.exists(\"df.rds\")) {\n      df_raw <- readRDS(\"df.rds\")\n    } else {\n      # Create sample data if file doesn't exist (for demo purposes)\n      df_raw <- create_sample_data()\n    }\n    \n    # Clean and preprocess\n    df_processed <- df_raw %>%\n      mutate(across(everything(), ~ na_if(., \"---\"))) %>%\n      mutate(across(where(is.list), ~ sapply(., function(x) if(length(x) > 0) x[1] else NA))) %>%\n      mutate(\n        completed_time = as.POSIXct(completed_time, tz = \"UTC\"),\n        started_time = as.POSIXct(started_time, tz = \"UTC\"),\n        date = as.Date(completed_time),\n        week = floor_date(date, \"week\"),\n        month = floor_date(date, \"month\"),\n        hour_started = hour(started_time),\n        day_of_week = wday(date, label = TRUE, week_start = 1),\n        is_weekend = day_of_week %in% c(\"Sat\", \"Sun\"),\n        duration_minutes = as.numeric(difftime(completed_time, started_time, units = \"mins\")),\n        is_night_survey = hour_started >= 19 | hour_started < 6,\n        is_short_survey = duration_minutes <= 5,\n        is_long_survey = duration_minutes >= 60,\n        consent = as.numeric(consent)\n      ) %>%\n      mutate(across(c(starts_with(\"ps_num_planted_\"), starts_with(\"num_surv_\")), ~ as.numeric(as.character(.))))\n    \n    return(df_processed)\n  }, error = function(e) {\n    # Return sample data if loading fails\n    return(create_sample_data())\n  })\n}\n\n# --- Sample Data Generator (for demo/fallback) ---\ncreate_sample_data <- function() {\n  set.seed(123)\n  n <- 500\n  \n  sites <- c(\"Adama\", \"Bishoftu\", \"Mojo\", \"Dukem\", \"Sebeta\")\n  woredas <- c(\"Adama Town\", \"Ada'a\", \"Lume\", \"Boset\", \"Dugda\")\n  enumerators <- paste0(\"enum_\", 1:10)\n  \n  # Create base times first\n  base_time <- Sys.time()\n  started_times <- base_time - runif(n, 0, 30*24*3600)\n  duration_mins <- runif(n, 5, 120)  # 5 to 120 minutes\n  completed_times <- started_times + (duration_mins * 60)\n  \n  data.frame(\n    consent = sample(0:1, n, replace = TRUE, prob = c(0.1, 0.9)),\n    site = sample(sites, n, replace = TRUE),\n    woreda = sample(woredas, n, replace = TRUE),\n    username = sample(enumerators, n, replace = TRUE),\n    started_time = started_times,\n    completed_time = completed_times,\n    hh_size = sample(1:12, n, replace = TRUE),\n    age = sample(18:80, n, replace = TRUE),\n    sex = sample(c(\"Male\", \"Female\"), n, replace = TRUE),\n    education_level = sample(c(\"None\", \"Primary\", \"Secondary\", \"Tertiary\"), n, replace = TRUE),\n    ps_num_planted_avocado = sample(0:50, n, replace = TRUE),\n    ps_num_planted_mango = sample(0:30, n, replace = TRUE),\n    ps_num_planted_papaya = sample(0:20, n, replace = TRUE),\n    stringsAsFactors = FALSE\n  ) %>%\n  mutate(\n    num_surv_avocado = pmax(0, ps_num_planted_avocado - sample(0:10, n, replace = TRUE)),\n    num_surv_mango = pmax(0, ps_num_planted_mango - sample(0:8, n, replace = TRUE)),\n    num_surv_papaya = pmax(0, ps_num_planted_papaya - sample(0:5, n, replace = TRUE)),\n    date = as.Date(completed_time),\n    week = floor_date(date, \"week\"),\n    month = floor_date(date, \"month\"),\n    hour_started = hour(started_time),\n    day_of_week = wday(date, label = TRUE, week_start = 1),\n    is_weekend = day_of_week %in% c(\"Sat\", \"Sun\"),\n    duration_minutes = as.numeric(difftime(completed_time, started_time, units = \"mins\")),\n    is_night_survey = hour_started >= 19 | hour_started < 6,\n    is_short_survey = duration_minutes <= 5,\n    is_long_survey = duration_minutes >= 60\n  )\n}\n\n# --- Load Data ---\ndf_processed <- load_data()\n\n# --- UI Definition ---\nui <- page_navbar(\n  title = div(\n    icon(\"seedling\", style = \"color: #2E8B57; margin-right: 10px;\"),\n    \"Enhanced Survival Survey Dashboard\",\n    style = \"font-weight: bold; font-size: 1.2em;\"\n  ),\n  theme = bs_theme(\n    version = 5, \n    bootswatch = \"flatly\",\n    primary = \"#2E8B57\", \n    secondary = \"#20B2AA\"\n  ),\n  \n  # Global Filters Sidebar\n  sidebar = sidebar(\n    title = div(icon(\"filter\"), \"Global Filters\"),\n    width = 300,\n    \n    dateRangeInput(\n      \"global_date_range\", \n      \"📅 Date Range:\",\n      start = min(df_processed$date, na.rm = TRUE), \n      end = max(df_processed$date, na.rm = TRUE),\n      format = \"yyyy-mm-dd\"\n    ),\n    \n    selectInput(\n      \"global_site_filter\", \n      \"🏢 Site:\",\n      choices = c(\"All\" = \"\", sort(unique(df_processed$site))), \n      multiple = TRUE\n    ),\n    \n    selectInput(\n      \"global_woreda_filter\", \n      \"🗺️ Woreda:\",\n      choices = c(\"All\" = \"\", sort(unique(df_processed$woreda))), \n      multiple = TRUE\n    ),\n    \n    selectInput(\n      \"global_enum_filter\", \n      \"👤 Enumerator:\",\n      choices = c(\"All\" = \"\", sort(unique(df_processed$username))), \n      multiple = TRUE\n    ),\n    \n    hr(),\n    \n    div(\n      style = \"background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); padding: 15px; border-radius: 8px;\",\n      h6(\"📊 Quick Stats\", style = \"color: #2E8B57; font-weight: bold;\"),\n      div(\n        style = \"display: flex; justify-content: space-between; margin-bottom: 5px;\",\n        span(\"Filtered Records:\", style = \"font-size: 0.9em;\"),\n        textOutput(\"filtered_count\", inline = TRUE)\n      ),\n      div(\n        style = \"display: flex; justify-content: space-between;\",\n        span(\"Completion Rate:\", style = \"font-size: 0.9em;\"),\n        textOutput(\"filtered_completion_rate\", inline = TRUE)\n      )\n    ),\n    \n    actionButton(\n      \"reset_filters\", \n      \"🔄 Reset Filters\",\n      class = \"btn-outline-secondary btn-sm\",\n      style = \"width: 100%; margin-top: 15px;\"\n    )\n  ),\n  \n  # --- Main Content Panels ---\n  nav_panel(\n    title = \"📊 Executive Dashboard\",\n    layout_column_wrap(\n      width = 1/5,\n      value_box(\"Total Surveys\", value = textOutput(\"total_surveys\"), showcase = icon(\"clipboard-list\"), theme = \"primary\"),\n      value_box(\"Completed\", value = textOutput(\"completed_surveys\"), showcase = icon(\"check-circle\"), theme = \"success\"),\n      value_box(\"Refusal Rate\", value = textOutput(\"refusal_rate\"), showcase = icon(\"times-circle\"), theme = \"danger\"),\n      value_box(\"Avg. Duration\", value = textOutput(\"avg_duration\"), showcase = icon(\"clock\"), theme = \"warning\"),\n      value_box(\"Enumerators\", value = textOutput(\"unique_enumerators\"), showcase = icon(\"users\"), theme = \"secondary\")\n    ),\n    \n    layout_columns(\n      col_widths = c(8, 4),\n      card(\n        full_screen = TRUE,\n        card_header(\"📈 Daily Survey Progress with Trend\"),\n        plotlyOutput(\"daily_progress_plot\", height = \"400px\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"🎯 Target Achievement Gauge\"),\n        plotlyOutput(\"gauge_plot\", height = \"400px\")\n      )\n    ),\n    \n    layout_columns(\n      col_widths = c(6, 6),\n      card(\n        full_screen = TRUE,\n        card_header(\"📅 Survey Completion Patterns\"),\n        plotlyOutput(\"completion_patterns_plot\", height = \"350px\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"⏰ Survey Timing Analysis\"),\n        plotlyOutput(\"timing_analysis_plot\", height = \"350px\")\n      )\n    )\n  ),\n  \n  nav_panel(\n    title = \"👥 Enumerator Analytics\",\n    layout_columns(\n      col_widths = c(7, 5),\n      card(\n        full_screen = TRUE,\n        card_header(\"📊 Performance Leaderboard\"),\n        DT::dataTableOutput(\"enumerator_table\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"🎯 Target vs Actual Performance\"),\n        plotlyOutput(\"target_comparison_plot\")\n      )\n    ),\n    \n    layout_columns(\n      col_widths = c(8, 4),\n      card(\n        full_screen = TRUE,\n        card_header(\"🔥 Productivity Heatmap\"),\n        plotlyOutput(\"productivity_heatmap\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"⚠️ Quality Control Alerts\"),\n        DT::dataTableOutput(\"quality_alerts_table\")\n      )\n    ),\n    \n    card(\n      full_screen = TRUE,\n      card_header(\"📈 Enumerator Performance Trends\"),\n      plotlyOutput(\"enum_trends_plot\", height = \"300px\")\n    )\n  ),\n  \n  nav_panel(\n    title = \"🌱 Agricultural Insights\",\n    layout_columns(\n      col_widths = c(7, 5),\n      card(\n        full_screen = TRUE,\n        card_header(\"🌳 Tree Survival Rates by Species\"),\n        plotlyOutput(\"survival_rates_plot\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"📋 Species Performance Details\"),\n        DT::dataTableOutput(\"species_table\")\n      )\n    ),\n    \n    layout_columns(\n      col_widths = c(6, 6),\n      card(\n        full_screen = TRUE,\n        card_header(\"📊 Planting vs Survival Comparison\"),\n        plotlyOutput(\"planting_survival_plot\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"🎯 Species Performance by Site\"),\n        plotlyOutput(\"species_site_plot\")\n      )\n    ),\n    \n    card(\n      full_screen = TRUE,\n      card_header(\"🗺️ Geographic Distribution of Surveys\"),\n      plotlyOutput(\"geographic_plot\")\n    )\n  ),\n  \n  nav_panel(\n    title = \"🏢 Site Analysis\",\n    layout_columns(\n      col_widths = c(6, 6),\n      card(\n        full_screen = TRUE,\n        card_header(\"🏢 Site Performance Overview\"),\n        plotlyOutput(\"site_performance_plot\", height = \"400px\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"📊 Site Comparison Matrix\"),\n        DT::dataTableOutput(\"site_comparison_table\")\n      )\n    ),\n    \n    layout_columns(\n      col_widths = c(4, 4, 4),\n      card(\n        full_screen = TRUE,\n        card_header(\"🌱 Survival Rates by Site\"),\n        plotlyOutput(\"site_survival_plot\", height = \"350px\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"⏱️ Duration Analysis by Site\"),\n        plotlyOutput(\"site_duration_plot\", height = \"350px\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"👥 Enumerator Distribution\"),\n        plotlyOutput(\"site_enum_plot\", height = \"350px\")\n      )\n    )\n  ),\n  \n  nav_panel(\n    title = \"🔍 Data Explorer\",\n    card(\n      card_header(\"🔍 Interactive Data Explorer with Advanced Filters\"),\n      layout_columns(\n        col_widths = c(3, 3, 3, 3),\n        dateRangeInput(\"explorer_date_range\", \"Date Range:\", \n                      start = min(df_processed$date, na.rm = TRUE), \n                      end = max(df_processed$date, na.rm = TRUE)),\n        selectInput(\"explorer_site_filter\", \"Site:\", \n                   choices = c(\"All\" = \"\", sort(unique(df_processed$site))), multiple = TRUE),\n        selectInput(\"explorer_enum_filter\", \"Enumerator:\", \n                   choices = c(\"All\" = \"\", sort(unique(df_processed$username))), multiple = TRUE),\n        selectInput(\"explorer_woreda_filter\", \"Woreda:\", \n                   choices = c(\"All\" = \"\", sort(unique(df_processed$woreda))), multiple = TRUE)\n      ),\n      DT::dataTableOutput(\"explorer_table\")\n    )\n  ),\n  \n  nav_panel(\n    title = \"📈 Advanced Analytics\",\n    layout_columns(\n      col_widths = c(6, 6),\n      card(\n        full_screen = TRUE,\n        card_header(\"🔄 Survey Completion Funnel\"),\n        plotlyOutput(\"funnel_plot\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"📊 Duration Distribution Analysis\"),\n        plotlyOutput(\"duration_plot\")\n      )\n    ),\n    \n    layout_columns(\n      col_widths = c(8, 4),\n      card(\n        full_screen = TRUE,\n        card_header(\"📅 Weekly Performance Trends\"),\n        plotlyOutput(\"weekly_trends_plot\")\n      ),\n      card(\n        full_screen = TRUE,\n        card_header(\"🎯 Key Performance Indicators\"),\n        DT::dataTableOutput(\"kpi_table\")\n      )\n    ),\n    \n    card(\n      full_screen = TRUE,\n      card_header(\"🔍 Correlation Analysis\"),\n      plotlyOutput(\"correlation_plot\", height = \"400px\")\n    )\n  )\n)\n\n# --- Server Logic ---\nserver <- function(input, output, session) {\n  \n  # --- Reactive Data ---\n  df_filtered <- reactive({\n    data <- df_processed %>% filter(consent == 1)\n    \n    # Apply global filters\n    if (!is.null(input$global_date_range)) {\n      data <- data %>% \n        filter(date >= input$global_date_range[1] & date <= input$global_date_range[2])\n    }\n    \n    if (length(input$global_site_filter) > 0 && !(\"\" %in% input$global_site_filter)) {\n      data <- data %>% filter(site %in% input$global_site_filter)\n    }\n    \n    if (length(input$global_woreda_filter) > 0 && !(\"\" %in% input$global_woreda_filter)) {\n      data <- data %>% filter(woreda %in% input$global_woreda_filter)\n    }\n    \n    if (length(input$global_enum_filter) > 0 && !(\"\" %in% input$global_enum_filter)) {\n      data <- data %>% filter(username %in% input$global_enum_filter)\n    }\n    \n    data\n  })\n  \n  # --- Reset Filters ---\n  observeEvent(input$reset_filters, {\n    updateSelectInput(session, \"global_site_filter\", selected = character(0))\n    updateSelectInput(session, \"global_woreda_filter\", selected = character(0))\n    updateSelectInput(session, \"global_enum_filter\", selected = character(0))\n    updateDateRangeInput(session, \"global_date_range\", \n                        start = min(df_processed$date, na.rm = TRUE), \n                        end = max(df_processed$date, na.rm = TRUE))\n  })\n  \n  # --- Quick Stats ---\n  output$filtered_count <- renderText({\n    format_number(nrow(df_filtered()))\n  })\n  \n  output$filtered_completion_rate <- renderText({\n    total_filtered <- nrow(df_processed)\n    if (total_filtered > 0) {\n      completed_count <- nrow(df_filtered())\n      rate <- completed_count / total_filtered\n      format_percent(rate)\n    } else {\n      \"0%\"\n    }\n  })\n  \n  # --- Executive Summary ---\n  output$total_surveys <- renderText({ format_number(nrow(df_processed)) })\n  output$completed_surveys <- renderText({ format_number(nrow(df_filtered())) })\n  output$refusal_rate <- renderText({\n    rate <- safe_sum(df_processed$consent == 0) / nrow(df_processed)\n    format_percent(rate)\n  })\n  output$avg_duration <- renderText({\n    paste(round(safe_mean(df_filtered()$duration_minutes), 1), \"min\")\n  })\n  output$unique_enumerators <- renderText({ \n    format_number(n_distinct(df_filtered()$username)) \n  })\n  \n  # --- Enhanced Daily Progress Plot ---\n  output$daily_progress_plot <- renderPlotly({\n    daily_data <- df_filtered() %>%\n      group_by(date) %>%\n      summarise(surveys = n(), .groups = \"drop\") %>%\n      arrange(date) %>%\n      mutate(\n        cumulative = cumsum(surveys),\n        trend = predict(loess(surveys ~ as.numeric(date), span = 0.3))\n      )\n    \n    p <- plot_ly(daily_data, x = ~date) %>%\n      add_bars(y = ~surveys, name = \"Daily Surveys\", \n               marker = list(color = custom_colors$primary),\n               hovertemplate = \"Date: %{x}<br>Surveys: %{y}<extra><\/extra>\") %>%\n      add_lines(y = ~trend, name = \"Trend\", \n                line = list(color = custom_colors$danger, width = 3),\n                hovertemplate = \"Date: %{x}<br>Trend: %{y:.1f}<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Date\"),\n        yaxis = list(title = \"Number of Surveys\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        legend = list(orientation = 'h', y = 1.1, x = 0.5, xanchor = 'center')\n      )\n    \n    p\n  })\n  \n  # --- Enhanced Gauge Plot ---\n  output$gauge_plot <- renderPlotly({\n    target <- 3600\n    current <- nrow(df_filtered())\n    percentage <- min(current / target, 1) * 100\n    \n    plot_ly(\n      type = \"indicator\",\n      mode = \"gauge+number+delta\",\n      value = current,\n      delta = list(reference = target, increasing = list(color = custom_colors$success)),\n      gauge = list(\n        axis = list(range = list(NULL, target)),\n        bar = list(color = custom_colors$primary),\n        steps = list(\n          list(range = c(0, target*0.5), color = \"lightgray\"),\n          list(range = c(target*0.5, target*0.8), color = \"gray\")\n        ),\n        threshold = list(\n          line = list(color = custom_colors$danger, width = 4),\n          thickness = 0.75,\n          value = target\n        )\n      )\n    ) %>% \n    layout(\n      title = FALSE, \n      paper_bgcolor = \"transparent\",\n      font = list(color = custom_colors$dark)\n    )\n  })\n  \n  # --- New: Completion Patterns Plot ---\n  output$completion_patterns_plot <- renderPlotly({\n    pattern_data <- df_filtered() %>%\n      group_by(day_of_week) %>%\n      summarise(surveys = n(), .groups = \"drop\")\n    \n    plot_ly(pattern_data, x = ~day_of_week, y = ~surveys, type = 'bar',\n            marker = list(color = custom_colors$secondary),\n            hovertemplate = \"Day: %{x}<br>Surveys: %{y}<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Day of Week\"),\n        yaxis = list(title = \"Number of Surveys\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\"\n      )\n  })\n  \n  # --- New: Timing Analysis Plot ---\n  output$timing_analysis_plot <- renderPlotly({\n    timing_data <- df_filtered() %>%\n      group_by(hour_started) %>%\n      summarise(surveys = n(), .groups = \"drop\")\n    \n    plot_ly(timing_data, x = ~hour_started, y = ~surveys, type = 'scatter', mode = 'lines+markers',\n            line = list(color = custom_colors$primary, width = 3),\n            marker = list(color = custom_colors$primary, size = 8),\n            hovertemplate = \"Hour: %{x}<br>Surveys: %{y}<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Hour of Day\"),\n        yaxis = list(title = \"Number of Surveys\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\"\n      )\n  })\n  \n  # --- Enhanced Enumerator Performance ---\n  enumerator_stats <- reactive({\n    df_filtered() %>%\n      group_by(username) %>%\n      summarise(\n        total_surveys = n(),\n        avg_duration = round(safe_mean(duration_minutes), 1),\n        short_surveys = safe_sum(is_short_survey),\n        night_surveys = safe_sum(is_night_survey),\n        weekend_surveys = safe_sum(is_weekend),\n        efficiency_score = round((total_surveys / (avg_duration + 1)) * 100, 1),\n        .groups = \"drop\"\n      ) %>%\n      arrange(desc(total_surveys))\n  })\n  \n  output$enumerator_table <- DT::renderDataTable({\n    DT::datatable(\n      enumerator_stats(),\n      colnames = c(\"Enumerator\", \"Total Surveys\", \"Avg Duration (min)\", \n                   \"Short Surveys\", \"Night Surveys\", \"Weekend Surveys\", \"Efficiency Score\"),\n      options = list(\n        pageLength = 10,\n        scrollX = TRUE,\n        dom = 'Bfrtip',\n        buttons = c('copy', 'csv', 'excel')\n      ),\n      rownames = FALSE\n    ) %>%\n    DT::formatStyle(\"efficiency_score\", \n                    backgroundColor = DT::styleInterval(c(50, 100), c(\"#ffcdd2\", \"#fff9c4\", \"#c8e6c9\")))\n  })\n  \n  # --- Enhanced Target Comparison ---\n  output$target_comparison_plot <- renderPlotly({\n    target_per_enum <- 50\n    p_data <- enumerator_stats()\n    \n    plot_ly(p_data, x = ~reorder(username, -total_surveys), y = ~total_surveys, \n            type = 'bar', name = \"Actual\",\n            marker = list(color = custom_colors$primary),\n            hovertemplate = \"Enumerator: %{x}<br>Surveys: %{y}<br>Efficiency: %{customdata}<extra><\/extra>\",\n            customdata = ~efficiency_score) %>%\n      add_trace(x = ~reorder(username, -total_surveys), y = target_per_enum, \n                type = 'scatter', mode = 'lines', name = \"Target\",\n                line = list(color = custom_colors$danger, dash = 'dash', width = 3)) %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Enumerator\", tickangle = -45),\n        yaxis = list(title = \"Total Surveys\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        legend = list(orientation = 'h', y = 1.1, x = 0.5, xanchor = 'center'),\n        margin = list(b = 100)\n      )\n  })\n  \n  # --- Enhanced Productivity Heatmap ---\n  output$productivity_heatmap <- renderPlotly({\n    heatmap_data <- df_filtered() %>%\n      group_by(day_of_week, hour_started) %>%\n      summarise(count = n(), .groups = \"drop\") %>%\n      complete(day_of_week, hour_started, fill = list(count = 0))\n      \n    plot_ly(\n      data = heatmap_data,\n      x = ~hour_started, y = ~day_of_week, z = ~count,\n      type = \"heatmap\", \n      colorscale = list(c(0, \"#f8f9fa\"), c(1, custom_colors$primary)),\n      hovertemplate = \"Day: %{y}<br>Hour: %{x}<br>Surveys: %{z}<extra><\/extra>\"\n    ) %>% \n    layout(\n      title = FALSE,\n      xaxis = list(title = \"Hour of Day\"),\n      yaxis = list(title = \"Day of Week\"),\n      paper_bgcolor = \"transparent\"\n    )\n  })\n  \n  # --- Quality Alerts Table ---\n  output$quality_alerts_table <- DT::renderDataTable({\n    quality_data <- enumerator_stats() %>%\n      filter(short_surveys > 0 | night_surveys > 0) %>%\n      select(Enumerator = username, `Short Surveys` = short_surveys, \n             `Night Surveys` = night_surveys, `Efficiency Score` = efficiency_score)\n      \n    DT::datatable(\n      quality_data,\n      options = list(pageLength = 5, dom = 't'),\n      rownames = FALSE\n    ) %>%\n    DT::formatStyle(\"Short Surveys\", \n                    backgroundColor = DT::styleInterval(0, c(\"white\", \"#ffcdd2\"))) %>%\n    DT::formatStyle(\"Night Surveys\", \n                    backgroundColor = DT::styleInterval(0, c(\"white\", \"#ffcdd2\")))\n  })\n  \n  # --- New: Enumerator Trends ---\n  output$enum_trends_plot <- renderPlotly({\n    trends_data <- df_filtered() %>%\n      group_by(date, username) %>%\n      summarise(daily_surveys = n(), .groups = \"drop\") %>%\n      group_by(username) %>%\n      arrange(date) %>%\n      mutate(cumulative = cumsum(daily_surveys)) %>%\n      ungroup()\n    \n    p <- plot_ly(trends_data, x = ~date, y = ~cumulative, color = ~username, type = 'scatter', mode = 'lines',\n                 hovertemplate = \"Date: %{x}<br>Cumulative: %{y}<br>Enumerator: %{color}<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Date\"),\n        yaxis = list(title = \"Cumulative Surveys\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\"\n      )\n    \n    p\n  })\n  \n  # --- Enhanced Agricultural Analysis ---\n  species_data <- reactive({\n    species_cols <- names(df_filtered())[grepl(\"ps_num_planted_|num_surv_\", names(df_filtered()))]\n    \n    if(length(species_cols) > 0) {\n      tryCatch({\n        df_filtered() %>%\n          select(all_of(species_cols)) %>%\n          # Convert all columns to numeric, handling character values\n          mutate(across(everything(), ~ as.numeric(as.character(.)))) %>%\n          pivot_longer(everything(), names_to = \"key\", values_to = \"value\") %>%\n          mutate(\n            type = ifelse(str_detect(key, \"ps_num_planted\"), \"planted\", \"survived\"),\n            species = str_remove_all(key, \"ps_num_planted_|num_surv_\"),\n            value = as.numeric(value)  # Ensure value is numeric\n          ) %>%\n          filter(!is.na(value)) %>%  # Remove NA values\n          group_by(species, type) %>%\n          summarise(total = safe_sum(value), .groups = \"drop\") %>%\n          pivot_wider(names_from = type, values_from = total, values_fill = 0) %>%\n          mutate(\n            survival_rate = ifelse(planted > 0, (survived / planted) * 100, 0)\n          )\n      }, error = function(e) {\n        # Return empty data frame if there's an error\n        data.frame(species = character(0), planted = numeric(0), \n                  survived = numeric(0), survival_rate = numeric(0))\n      })\n    } else {\n      # Return empty data frame with correct structure\n      data.frame(species = character(0), planted = numeric(0), \n                survived = numeric(0), survival_rate = numeric(0))\n    }\n  })\n  \n  output$survival_rates_plot <- renderPlotly({\n    p_data <- species_data() %>% arrange(desc(survival_rate))\n    \n    if(nrow(p_data) > 0) {\n      plot_ly(p_data, x = ~reorder(species, survival_rate), y = ~survival_rate, \n              type = 'bar', marker = list(color = ~survival_rate, \n              colorscale = list(c(0, \"#ffcdd2\"), c(1, custom_colors$success))),\n              hovertemplate = \"Species: %{x}<br>Survival Rate: %{y:.1f}%<br>Planted: %{customdata[0]}<br>Survived: %{customdata[1]}<extra><\/extra>\",\n              customdata = ~cbind(planted, survived)) %>%\n        layout(\n          title = FALSE,\n          xaxis = list(title = \"Species\", tickangle = -45),\n          yaxis = list(title = \"Survival Rate (%)\", range = c(0, 100)),\n          paper_bgcolor = \"transparent\", \n          plot_bgcolor = \"transparent\",\n          margin = list(b = 100)\n        )\n    } else {\n      plot_ly() %>%\n        layout(\n          title = \"No species data available\",\n          paper_bgcolor = \"transparent\"\n        )\n    }\n  })\n  \n  output$species_table <- DT::renderDataTable({\n    display_data <- species_data() %>%\n      select(Species = species, Planted = planted, Survived = survived, `Survival Rate (%)` = survival_rate) %>%\n      arrange(desc(`Survival Rate (%)`))\n      \n    DT::datatable(\n      display_data,\n      options = list(pageLength = 8, dom = 'Bfrtip', buttons = c('copy', 'csv')),\n      rownames = FALSE\n    ) %>%\n    DT::formatStyle(\"Survival Rate (%)\", \n                    backgroundColor = DT::styleInterval(c(60, 80), c(\"#ffcdd2\", \"#fff9c4\", \"#c8e6c9\"))) %>%\n    DT::formatRound(\"Survival Rate (%)\", 1)\n  })\n  \n  # --- New: Planting vs Survival Comparison ---\n  output$planting_survival_plot <- renderPlotly({\n    p_data <- species_data()\n    \n    if(nrow(p_data) > 0) {\n      plot_ly(p_data, x = ~species, y = ~planted, type = 'bar', name = 'Planted',\n              marker = list(color = custom_colors$primary)) %>%\n        add_trace(y = ~survived, name = 'Survived', \n                  marker = list(color = custom_colors$success)) %>%\n        layout(\n          title = FALSE,\n          xaxis = list(title = \"Species\", tickangle = -45),\n          yaxis = list(title = \"Number of Trees\"),\n          paper_bgcolor = \"transparent\", \n          plot_bgcolor = \"transparent\",\n          barmode = 'group',\n          legend = list(orientation = 'h', y = 1.1, x = 0.5, xanchor = 'center'),\n          margin = list(b = 100)\n        )\n    } else {\n      plot_ly() %>% layout(title = \"No data available\", paper_bgcolor = \"transparent\")\n    }\n  })\n  \n  # --- New: Species Performance by Site ---\n  output$species_site_plot <- renderPlotly({\n    if(nrow(species_data()) > 0) {\n      tryCatch({\n        site_species_data <- df_filtered() %>%\n          select(site, starts_with(\"ps_num_planted_\"), starts_with(\"num_surv_\")) %>%\n          # Convert all species columns to numeric first\n          mutate(across(c(starts_with(\"ps_num_planted_\"), starts_with(\"num_surv_\")), ~ as.numeric(as.character(.)))) %>%\n          group_by(site) %>%\n          summarise(across(everything(), safe_sum), .groups = \"drop\") %>%\n          pivot_longer(-site, names_to = \"key\", values_to = \"value\") %>%\n          mutate(\n            type = ifelse(str_detect(key, \"ps_num_planted\"), \"planted\", \"survived\"),\n            species = str_remove_all(key, \"ps_num_planted_|num_surv_\"),\n            value = as.numeric(value)\n          ) %>%\n          filter(!is.na(value)) %>%\n          group_by(site, species, type) %>%\n          summarise(total = safe_sum(value), .groups = \"drop\") %>%\n          pivot_wider(names_from = type, values_from = total, values_fill = 0) %>%\n          mutate(survival_rate = ifelse(planted > 0, (survived / planted) * 100, 0))\n        \n        plot_ly(site_species_data, x = ~site, y = ~survival_rate, color = ~species, \n                type = 'bar', \n                hovertemplate = \"Site: %{x}<br>Species: %{color}<br>Survival Rate: %{y:.1f}%<extra><\/extra>\") %>%\n          layout(\n            title = FALSE,\n            xaxis = list(title = \"Site\", tickangle = -45),\n            yaxis = list(title = \"Survival Rate (%)\"),\n            paper_bgcolor = \"transparent\", \n            plot_bgcolor = \"transparent\",\n            barmode = 'group',\n            margin = list(b = 100)\n          )\n      }, error = function(e) {\n        plot_ly() %>% layout(title = \"Error processing species data\", paper_bgcolor = \"transparent\")\n      })\n    } else {\n      plot_ly() %>% layout(title = \"No data available\", paper_bgcolor = \"transparent\")\n    }\n  })\n  \n  # --- Geographic Plot ---\n  output$geographic_plot <- renderPlotly({\n    geo_data <- df_filtered() %>%\n      group_by(woreda) %>%\n      summarise(count = n(), .groups = \"drop\") %>%\n      arrange(desc(count))\n      \n    plot_ly(geo_data, x = ~reorder(woreda, -count), y = ~count, \n            type = 'bar', marker = list(color = custom_colors$secondary),\n            hovertemplate = \"Woreda: %{x}<br>Surveys: %{y}<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Woreda\", tickangle = -45),\n        yaxis = list(title = \"Number of Surveys\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        margin = list(b = 100)\n      )\n  })\n  \n  # --- Enhanced Site Analysis ---\n  site_stats <- reactive({\n    df_filtered() %>%\n      group_by(site) %>%\n      summarise(\n        total_surveys = n(),\n        avg_duration = round(safe_mean(duration_minutes), 1),\n        completion_rate = round((n() / nrow(df_filtered())) * 100, 1),\n        unique_enumerators = n_distinct(username),\n        avg_hh_size = round(safe_mean(hh_size), 1),\n        weekend_surveys = safe_sum(is_weekend),\n        night_surveys = safe_sum(is_night_survey),\n        .groups = \"drop\"\n      ) %>%\n      arrange(desc(total_surveys))\n  })\n  \n  output$site_performance_plot <- renderPlotly({\n    p_data <- site_stats()\n    \n    plot_ly(p_data, x = ~reorder(site, -total_surveys), y = ~total_surveys, \n            type = 'bar', marker = list(color = custom_colors$gradient[1]),\n            hovertemplate = \"Site: %{x}<br>Surveys: %{y}<br>Avg Duration: %{customdata[0]} min<br>Enumerators: %{customdata[1]}<extra><\/extra>\",\n            customdata = ~cbind(avg_duration, unique_enumerators)) %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Site\", tickangle = -45),\n        yaxis = list(title = \"Number of Surveys\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        margin = list(b = 100)\n      )\n  })\n  \n  output$site_comparison_table <- DT::renderDataTable({\n    DT::datatable(\n      site_stats(),\n      colnames = c(\"Site\", \"Total Surveys\", \"Avg Duration (min)\", \"Completion Rate (%)\", \n                   \"Enumerators\", \"Avg HH Size\", \"Weekend Surveys\", \"Night Surveys\"),\n      options = list(\n        pageLength = 8,\n        scrollX = TRUE,\n        dom = 'Bfrtip',\n        buttons = c('copy', 'csv', 'excel')\n      ),\n      rownames = FALSE\n    ) %>%\n    DT::formatStyle(\"completion_rate\", \n                    backgroundColor = DT::styleInterval(c(10, 20), c(\"#ffcdd2\", \"#fff9c4\", \"#c8e6c9\")))\n  })\n  \n  # --- Site Survival Plot ---\n  output$site_survival_plot <- renderPlotly({\n    site_survival <- df_filtered() %>%\n      select(site, starts_with(\"ps_num_planted_\"), starts_with(\"num_surv_\")) %>%\n      group_by(site) %>%\n      summarise(\n        total_planted = safe_sum(across(starts_with(\"ps_num_planted_\"))),\n        total_survived = safe_sum(across(starts_with(\"num_surv_\"))),\n        .groups = \"drop\"\n      ) %>%\n      mutate(\n        survival_rate = ifelse(total_planted > 0, (total_survived / total_planted) * 100, 0)\n      ) %>%\n      arrange(desc(survival_rate))\n    \n    plot_ly(site_survival, x = ~reorder(site, survival_rate), y = ~survival_rate, \n            type = 'bar', marker = list(color = ~survival_rate, \n            colorscale = list(c(0, \"#ffcdd2\"), c(1, custom_colors$success))),\n            hovertemplate = \"Site: %{x}<br>Planted: %{customdata[0]}<br>Survived: %{customdata[1]}<br>Rate: %{y:.1f}%<extra><\/extra>\",\n            customdata = ~cbind(total_planted, total_survived)) %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Site\", tickangle = -45),\n        yaxis = list(title = \"Survival Rate (%)\", range = c(0, 100)),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        margin = list(b = 100)\n      )\n  })\n  \n  # --- Site Duration Plot ---\n  output$site_duration_plot <- renderPlotly({\n    duration_data <- site_stats() %>%\n      arrange(desc(avg_duration))\n    \n    plot_ly(duration_data, x = ~reorder(site, avg_duration), y = ~avg_duration, \n            type = 'bar', marker = list(color = custom_colors$warning),\n            hovertemplate = \"Site: %{x}<br>Avg Duration: %{y} min<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Site\", tickangle = -45),\n        yaxis = list(title = \"Average Duration (minutes)\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        margin = list(b = 100)\n      )\n  })\n  \n  # --- New: Site Enumerator Distribution ---\n  output$site_enum_plot <- renderPlotly({\n    enum_dist <- site_stats() %>%\n      arrange(desc(unique_enumerators))\n    \n    plot_ly(enum_dist, x = ~reorder(site, unique_enumerators), y = ~unique_enumerators, \n            type = 'bar', marker = list(color = custom_colors$info),\n            hovertemplate = \"Site: %{x}<br>Enumerators: %{y}<extra><\/extra>\") %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Site\", tickangle = -45),\n        yaxis = list(title = \"Number of Enumerators\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        margin = list(b = 100)\n      )\n  })\n  \n  # --- Enhanced Data Explorer ---\n  explorer_filtered_data <- reactive({\n    df <- df_filtered() %>%\n      select(\n        Date = date, Enumerator = username, \n        Site = site, Woreda = woreda, `Duration (min)` = duration_minutes,\n        `HH Size` = hh_size, `Education` = education_level, Age = age, Sex = sex,\n        `Weekend Survey` = is_weekend, `Night Survey` = is_night_survey\n      )\n      \n    # Apply explorer-specific filters\n    if (!is.null(input$explorer_date_range)) {\n      df <- df %>% \n        filter(Date >= input$explorer_date_range[1] & Date <= input$explorer_date_range[2])\n    }\n    \n    if (length(input$explorer_site_filter) > 0 && !(\"\" %in% input$explorer_site_filter)) {\n      df <- df %>% filter(Site %in% input$explorer_site_filter)\n    }\n    \n    if (length(input$explorer_enum_filter) > 0 && !(\"\" %in% input$explorer_enum_filter)) {\n      df <- df %>% filter(Enumerator %in% input$explorer_enum_filter)\n    }\n    \n    if (length(input$explorer_woreda_filter) > 0 && !(\"\" %in% input$explorer_woreda_filter)) {\n      df <- df %>% filter(Woreda %in% input$explorer_woreda_filter)\n    }\n    \n    df\n  })\n  \n  output$explorer_table <- DT::renderDataTable({\n    DT::datatable(\n      explorer_filtered_data(),\n      options = list(\n        pageLength = 15,\n        scrollX = TRUE,\n        dom = 'Bfrtip',\n        buttons = c('copy', 'csv', 'excel', 'pdf'),\n        searchHighlight = TRUE\n      ),\n      rownames = FALSE,\n      filter = 'top'\n    ) %>%\n    DT::formatStyle(\"Weekend Survey\", \n                    backgroundColor = DT::styleEqual(TRUE, \"#fff9c4\")) %>%\n    DT::formatStyle(\"Night Survey\", \n                    backgroundColor = DT::styleEqual(TRUE, \"#ffcdd2\"))\n  })\n  \n  # --- Advanced Analytics ---\n  output$funnel_plot <- renderPlotly({\n    total_attempts <- nrow(df_processed)\n    completed <- safe_sum(df_processed$consent == 1)\n    refused <- safe_sum(df_processed$consent == 0)\n    \n    funnel_data <- data.frame(\n      stage = c(\"Total Attempts\", \"Completed\", \"Refused\"),\n      value = c(total_attempts, completed, refused),\n      color = c(custom_colors$primary, custom_colors$success, custom_colors$danger)\n    )\n    \n    plot_ly(funnel_data, type = 'funnel',\n            y = ~stage, x = ~value,\n            textposition = \"inside\", textinfo = \"value+percent initial\",\n            marker = list(color = ~color)) %>%\n      layout(\n        title = FALSE, \n        paper_bgcolor = \"transparent\",\n        font = list(color = custom_colors$dark)\n      )\n  })\n  \n  output$duration_plot <- renderPlotly({\n    plot_ly(df_filtered(), x = ~duration_minutes, type = 'histogram', nbinsx = 30,\n            marker = list(color = custom_colors$secondary, opacity = 0.7),\n            hovertemplate = \"Duration: %{x} min<br>Count: %{y}<extra><\/extra>\") %>%\n      add_vline(x = mean(df_filtered()$duration_minutes, na.rm = TRUE), \n                line = list(color = custom_colors$danger, dash = \"dash\", width = 2),\n                annotation = list(text = \"Mean\", showarrow = TRUE)) %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Duration (minutes)\"),\n        yaxis = list(title = \"Frequency\"),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\"\n      )\n  })\n  \n  output$weekly_trends_plot <- renderPlotly({\n    weekly_data <- df_filtered() %>%\n      group_by(week) %>%\n      summarise(\n        surveys = n(),\n        avg_duration = safe_mean(duration_minutes),\n        completion_rate = n() / nrow(df_processed) * 100,\n        .groups = \"drop\"\n      )\n      \n    plot_ly(weekly_data, x = ~week) %>%\n      add_trace(y = ~surveys, type = 'scatter', mode = 'lines+markers', name = 'Surveys',\n                line = list(color = custom_colors$primary, width = 3), \n                marker = list(color = custom_colors$primary, size = 8),\n                yaxis = 'y1') %>%\n      add_trace(y = ~avg_duration, type = 'scatter', mode = 'lines+markers', name = 'Avg Duration',\n                line = list(color = custom_colors$warning, width = 3), \n                marker = list(color = custom_colors$warning, size = 8),\n                yaxis = 'y2') %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Week\"),\n        yaxis = list(title = \"Number of Surveys\", side = 'left'),\n        yaxis2 = list(title = \"Average Duration (min)\", side = 'right', overlaying = 'y'),\n        paper_bgcolor = \"transparent\", \n        plot_bgcolor = \"transparent\",\n        legend = list(orientation = 'h', y = 1.1, x = 0.5, xanchor = 'center')\n      )\n  })\n  \n  # --- New: KPI Table ---\n  output$kpi_table <- DT::renderDataTable({\n    kpi_data <- data.frame(\n      KPI = c(\"Total Surveys\", \"Completion Rate\", \"Avg Duration\", \"Quality Score\", \n              \"Productivity\", \"Coverage\"),\n      Value = c(\n        nrow(df_filtered()),\n        paste0(round(nrow(df_filtered()) / nrow(df_processed) * 100, 1), \"%\"),\n        paste0(round(safe_mean(df_filtered()$duration_minutes), 1), \" min\"),\n        paste0(round((1 - safe_sum(df_filtered()$is_short_survey) / nrow(df_filtered())) * 100, 1), \"%\"),\n        paste0(round(nrow(df_filtered()) / n_distinct(df_filtered()$username), 1), \" surveys/enum\"),\n        paste0(n_distinct(df_filtered()$woreda), \" woredas\")\n      ),\n      Target = c(\"3600\", \"90%\", \"15 min\", \"95%\", \"50 surveys/enum\", \"10 woredas\"),\n      Status = c(\"📊\", \"✅\", \"⚠️\", \"✅\", \"📈\", \"✅\")\n    )\n    \n    DT::datatable(\n      kpi_data,\n      options = list(pageLength = 6, dom = 't', ordering = FALSE),\n      rownames = FALSE\n    )\n  })\n  \n  # --- New: Correlation Analysis ---\n  output$correlation_plot <- renderPlotly({\n    # Create correlation matrix for numeric variables\n    numeric_vars <- df_filtered() %>%\n      select(duration_minutes, hh_size, age) %>%\n      select_if(is.numeric)\n    \n    if(ncol(numeric_vars) > 1) {\n      cor_matrix <- cor(numeric_vars, use = \"complete.obs\")\n      \n      plot_ly(\n        z = ~cor_matrix,\n        x = ~colnames(cor_matrix),\n        y = ~colnames(cor_matrix),\n        type = \"heatmap\",\n        colorscale = list(c(0, \"#ffcdd2\"), c(0.5, \"white\"), c(1, custom_colors$success)),\n        hovertemplate = \"X: %{x}<br>Y: %{y}<br>Correlation: %{z:.3f}<extra><\/extra>\"\n      ) %>%\n      layout(\n        title = FALSE,\n        xaxis = list(title = \"Variables\"),\n        yaxis = list(title = \"Variables\"),\n        paper_bgcolor = \"transparent\"\n      )\n    } else {\n      plot_ly() %>% \n        layout(title = \"Insufficient numeric data for correlation analysis\",\n               paper_bgcolor = \"transparent\")\n    }\n  })\n}\n\n# --- Run Application ---\nshinyApp(ui, server)","type":"text"},{"name":"df.rds","content":"H4sIAAAAAAAABuz9a5vkyHUmCBZLLBZFiiXqRlEUxQ6RVHeLpJMwM9gF1eqZJZu6bKvVO89S\ns1r1l3wMMENmqDIjShGRKpH7eb/vn5v/s++BZ8Dg7gY4bu6OiMQzPaJlwGCXc3nPe44ZvP7f\nX/vggw9+64Mvf4T/i///gw8++j//8W82Bv/6A/zj/4f//5sffPCl/+uDL3/w22h/mRmhnk9b\nJvH2qfsPHWfKvk4tq1PMdSm9D93LU5fD0tpD/WWu9hLWcIq9zLWvJcinD749dXs49bynltU5\n5XYKnF+CPM+5hqGxbAk4NpTzLGEvS2grfby9hHUuQV9tMrkUvi1BF0v29/etrQe2l7Dmc/pm\nH6zT8vj4p7C3PmtrW2fbms+5trb17LRbdNGUZ69xZI/1tNhA23omzdXDZvRAeS7Bp3awZaCN\n9cHnPvIc6hfKzN/WpkUmJr7mPr5p+HE5D957D/vpg5N98A3r360B3/232zdv/pu981c/v3F3\nt9fuJ1f/5u/ur29vrr7Pfyr1T5Pv/+dUpwlnf/nTq59//vnVv2Ei/dOr+rX/17ve284/vfrF\n2+vX7mr7yk+ucvzr4er25tMrnnC5SdSGiSc5c6rWmdeZ15mf4Mzqp4xmZjpTx2dG5zAzvXI4\ns9wwvs68zryEmRcWJWUyx8zf/pvbuzefv7a/9nePg3xKo5ilI82z1MbTmvl95Kbvo57fx5nX\n7OfZzfw+cpbozG1e9Zz3/D7O3IZhz3nP76NXPfOZ38dYtc68zrzOvM787LKb9zGveub588I4\nyeVY7/s488o93w8MW2deZ36uzGCd+f2wsLXKvM68MoN15qeMnuvM78fMiq8zrzM/+drQwva8\nzvx+xOf3UdrrzOvM68xPcuZoFts28+nz53Xmdebn+tXE+8hJVqb/7GZeWMX1mWPYwma+3Jn7\nuud15uc68+VOjdYKzTrzOvPzmXn1qnXmtTa0zvyUZ15zyfdj5md+f3ud+f3Ibhb2hcAz5yTr\nzBdn+s88x1gYeq4zP7uZF2bb7yPTf+YzLyxWvY8zP/Mouc588ZlXC3s/Zl7v0KwzrzM/n++r\nnvlvsqwzrxa2SvuZz/w+Rox15nXm55rRrTOvFrbu+fnseZ15nXmdeZ15nXmdeemnwOvM68wn\nPvm+3G9pPe+Z30cLW2deZ15nXmd+yjOvdZJ15uc68/voz+vMR1jvM9nzitvrzOvM68zrSdk6\n8zrz8uLzOvM68zrzeWr6zxvD1pnf45nfxztx7+PM76NtrzOvM68zrzOvM68zrzOvM7/fM+uL\nfcG3zvx+WNj6jegq7XXP68zrCco68zrzAs8x3sP/zvcFK67P+3uMhc2s5ftn25eT9ll+Aed9\nxO115vdj5oX58zrz+xGrzjLz++jP68zrzGvEeOYzP3PcXtrM72HmfrlfFn0vLew9nPm9xO2L\nnRpdrvr4PuL2++jPK5I8O2kvLbu52Hfubbj9nPf8zGde2gnKOvM683PF7XXmdeaT4vZ7eeb+\nHs68fi/5fmQ3zzyvWtie15nPOnO2zrzOvM48M26b9y8+X27P72OV+X3MMczzzjHitd4WPT+T\nuuc68/s88/OuDa3SPlKteM4zX07abd8Cn77uOTU+f/DBNz/44Ev/17sV/NZms3nX/BJvb7DH\nhjjeuTFk9+isT6/Gww9aFxEboe+okU12CCI2ADveiHbvEHO3LI82B+7giPj69/xSOsN0nULr\nFuShAkZZ8FB1zy7SgQvotOahHt5DmMNdq26I3rIYtv5jAp1PGu3yGecyw6Q7Hm7nmLOfFE9h\nOIOl2NOXZvbNofDUbTrHHs+x+GFeMDVWDg7UU+JHBPOHLHtO5+tAwrPG6sGMaSheToiJHQ4z\n0wZ7M4thCHM6A54JsfoRhqkO0It9jXecTqH0QKqTwmGHM7c/6hlFD0fqSDhmBK+xOdJwGBlm\nL32j4liB99t3b6o6kDP1em88RQwTpV0PhzruZOdqDtCZ3vfjlGPBuldlYayFHZfXbm3mS8kQ\nUOrDJ5IeI7MefQ7HOZz98PU+Aw4BmsjrPUoxkc593PFwyx2NQWvuEFSfPu0ll16vd4ilQ1An\nK7R0qXIu0Q2atMMyB7lnH9G1D9gTtTp2P2jVHcKba/cd8hhk/kOkOBIRJ87VR2KjjGLYoz6w\nN2icIR7WtN9BsNJhFB2PJsLBIIueGLEGhclxyH76MshI8Q6KEEO03A2XfUQ+yLHHRagO8x9k\ntu0Y3TtH6YMNs5vlRIzpE6onGvOQgsYwF+h4vQ/CnA7ERhUyekW2w3FmKmMMw9I+UwyCg0G2\n0SdmjRNvn532IYOD2Eqft8bRsYMyRS/cfPzLBy3/OxUQOrLc1jX0Mb2O9fVJrMeZTqcJ7lYi\nPuSibj32/jCVdetxZx8KXrdU/TR7bKn6DVm3RD2ekIcj8/C3uh/PImtJD8eTdUvVq0rVYb/w\nN67rN3RkLaYeWR2uSkTeCE/T+l0ek5U5bIWds8jTICuRReaNSJfzyLuhxQ53qeu/SRZZQWRk\nGZmDR9Yc+oWnDTkHDYa/Bf3WlqiSw1EadmoOJRR2mdb9gmYaf0sOW2FVwbKliaxZHa4+ptWG\ntQf5hdn0YT+WRfbLIhKKWWLEP2K2G0ZWMc3UK1UR31Kia78xmTakW68vYhsNytpYjFKHixEx\nAaaHyxcRx5TicI7gojyy1IYA+eG8YVUyYp7BOBoGqA4FGIxNxBw4so+w37APHWTADlcVAKax\n5vCGOWwFJamITMMoac+nshP6w1qCg4iI66URQGhIN6wlMm9Mzg346QTZaBAwh+OpGPRHACs2\nR73LpjOICMI0Yl1kWWGbAU1icaih9PRgCVFz5zHUiZhYGlF/oxVUHdQfweVgvA2TCPNG8Cw8\nVZGnARqCg4RVBbdtsIuIccRUGFbaQFl2KJeYC8iYrNihXBpGFEbJDvcblb05lFqjX5BabLaY\nNA5ltYPfYeLQMWbvsfATEUwMKRtKjxh0w/Aj48XeTSNridHW8Lcwh4nEpoaqeUREtQTjcos5\nfUxuDQrGD9fFIxQsRI5gljEHb0irZ3SK/a0R6GO0sRPVGyvghzJoxNsYvgfyHiEsMhbxI1Rc\nRUCuAcIxRhIhmg05R+JAjCarCGjG4ncgvY00iB3KKkhXRShxWEHMQ1REl9H4GAswnRYRS5zC\nu7ozTKUR2TeSpMDPwt4ijCk2Ho8lCOGNeuTgZdF9xNhRRBoNYh1AOATj7LDVGC94bRgvkICg\n3whLbnCiWEKpI/uIMLWGVgPnjSB07G8qIrWGbUTS9TTC3WNILiIMO4YvvHOXUY4f/ha8LJJU\nN+hULF6F5DHybjcfjSbVES3E0twGOQpyDjuSh/tt6DfgaSRJDyvVzVF2y0tXicuSwiqWeFky\nbriTwqjMSq5Sx7xJ135rv7Xf2m/tt/Zb+6391n5rv7Xf2m/tt/Zb+6391n5rv7Xf2m/tt/Zb\n+6391n5rv7Xf2m/tt/Zb+6391n5rv7Xf2m/tt/Zb+6391n5rv7Xf2m/tt/Zb+6391n5rv7Xf\n2m/tt/Zb+6391n5rv7Xf2m/tt/Zb+6391n5rv7Xf2m/tt/Zb+639Ftev9T/qvjbX5tpcm2tz\nba7Ntbns5v/3v/7dP/8ff/3//B//9//59//5+68eHj6///RnP/viiy9+Wty+eVPYO//qX396\ne/fyZ/Znt7bc+IdX17efX9uf2c+vf1be3r15YR8ebPHqjb95+Nm/sZ+JIi0SluiNTJjcpElZ\nbPKSmU3mXcJ5orjO7c+YBosSTHEpU/PTN5+L7//lpaWwNtfm2jw1OiR5VnBti40opN6kzvBN\nlki28UZkgpeJz/J0iw4qSZBoKfVT++ZuRYe1uTbX5tpcm2vzKTfXkunTasb+485rc22uzfeg\nuTr/2lybB17BLr2Ctbk2L2j/C40Kq1+uzbW5Ntfm2lybT7m5FgnX5tpcm2tzba7NtflEm2tB\nYm2uzSU2V89cm2tzba7Ntbk2n3Jzt1R4ldmEa54IJgqdZsaZVBQ8z5T0+EeZ+aH9WCqZE8YK\nXerUJDpzIuFcqAL/awsh137d/SxjmRBaZlryNPNZniXSZFwnpjRKlmu/7n4Na19FvrB+q+ut\n/Vb7O1+/okwzlXiWO6NSJ6wp81QzyUSZS2uEubQ+LtWvr1zm7rd0uVxKzkv3o7XfeXDoUv2W\nLr+l+/nScfdSOL70faz91n5rv7Xf2m/tt/Zb+6393q9+K49d6zlPQc5rv7Xf2m/tt/Zb+639\n1n5j+6XWlT7Ni8LbNE1VkZXKJYUpubYyTwv33PotXR/vmx0sXS5rv7XfU/Cj1X/Xfk/BXla7\nWvut/dZ+K76s/cb08wn0KyUrcutSjo5FIZX2qkicS0t28X5Ll9/ab+03CE8Ly1RqGGMl7Lxk\nmSkSY7XQrkwLmbO13zz9lm4vs9vfwvWx9jtPP85YmqeJsPRAWp6XQiUyFSL1pcvy/FT9nst+\nV39bVr+l29/ab43na7+Vv5yqny2zwjrlE576VEtrPVIMIwvn8yzXOlv7rf3e53598WXu8ZaO\nG2u/ZfU7an97P5nEZVmUXBuWGJYaneWJZolVxvFCCZ/UvFdl0qnEJkK4PHWeoyVVaViR5own\nua7ntxKzmdIb51PJi4xZVxqhlCsTZQ1/7FdmzmMv3qTKpjpRWWa9y5LCuSyTaZiXOcmcy23O\njEhdkmWs4IlODCYXXKvgT6pIMpZbk4HGqzQzyhivtQCR17kTdV1McM69U4pZIvzC5gnetJko\nhC5MmhSP/fJC61J6loo0S1MsPcPsSak5KyTTmX3s57hnSrMiyQ1PZeJyxwXzhUqwr1zKejys\nx2dZavO85GnKbeaLBOmGs15wX/B6HzSNZWWS6NymNLmBSphimU+KXLtaflylGK+ESi1LrdA5\n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\naLPNKyM2byoiHU18to+i1Z7HR5EtPz6K2Mbjo0hBsnpEYSXqRNtbVVHJb+9URLe8PTSJqrK6\nZdo2IFHfqJtTJtKiSlYdxLfN1YZR1UlW1L/o4ClaWNg+at8Xj4q3egQ7jBSQNTFzFj3JenwU\nN7btoygQmepCSHQZ5tPq9LnlUQsJrOC6hSxV923iCcK2jt3CKtPozU/9jhLHbYO1ONH2UbQS\nuOUbWXyFxPOjiWr1iEUvTmwfpe2PokXC7aPoZYbtoxbJ8+31mKjDbi9ptAwoo7e4q7dk9HTp\n8VHEU7aP0hiDfXwUYV/bRzIGKdtHKgbm20fRU7PHRxGz2T6K3ls27w7vIlre4mH0LGD7KIob\n5rEC0zZgNA0071IYkPbdzy++xNbG2lgba6P5ndZCVrQ21sZqv2tjkY3V3FrFsIpmbayNtbE2\n1saxxvprEM1H669BNN9afw1i99H6axDh0fprELuCWn8NYufR+msQzUfrr0E0H71vvwZB38q0\nbHn9NYjmo/XXIPYerb8G0dDy+msQO4/WX4Oo9bX+GsTuo/XXIJqP1l+D2Jtr/TWI+tH6axA7\nj9Zfg6jfWn8NYk/L669BNB6tvwbRfLT+GsT+o/XXIB4frb8GEULA+msQe4/WX4NoDLj+GsTO\no/XXIJqP1l+D2H20/hpE8Mr11yAaj9ZfgwiP1l+D2DPR9dcgGitcfw2iqUoejV/rr0EcPlp/\nDaL51vprEPWj9dcgDh6tvwYRHq2/BtF4tP4axM6j9dcgmo/WX4NoPnqPfg3iDP/10G99fnt7\n94L++6oP1zcvX3x+Z4uH6yP/qddv2JvrN/b1C2ff2Je9/yu9sza/97m/f3hhHx5s8dnV7hbu\nrx/mW9MnX9gHf/fi/tXt3cPkvc46WLz5h7tTXN0+vPJ3J57+DNs6Q/MnO0Z91cu+frj3Tpcr\n/UFzRHd97+39RFHxPV0fLvPqC+/di+L2zef+4frh+vam79DfeLfAq/Lu9v6p/uff/2lXO8el\nFddfDyF+1BTTd7umPXz3z4+ua8TWowg9cGFnaC4gkPyWu/msb99Rqhow/tKaT3jppw9f8dee\ncCz8y96I2FcYsjuI9h79e5F3K8S9Kl/f3rq+G/x6YzkjAOiYN/QL8N/Zx5CDNf3PLlLRFafu\nEade01/+9a19ff3w6x7Buzei/UXLnKW9e4MB7vyb23/zvTVxtPl7TVm2bOOb+/sdMc/vnzB1\n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\noSsId32xYth169nR1YoxWFbNLMkDOLBWeweXeTfXTl//yxg79CdxWSdw5TsCf3+X31QdUBju\n5eobFdKGvFhol81Z5QYX31Rig2X6O7lq2m97oaI5/a4qEY6J1tWrMrKbts2Nazjdr9YimZC4\n87Y19tVqOPXCSVx2yPg5p2ezrnr0q6VuU7h3pnURhPo7v1hhk7ufq1U1sng0udXlVQC2w31f\nXrnq8pWifpdLByZiqubW5qvsVSWdK1+vqjDYcjxWjXxeu3ZyuWIrXlUBVmR7I199Q8lj3Zp+\nL+GeHQx5mQfuY11tWV6pGKxByss9Bt7yYjWVD/miwoaXVfxiBgZ3lcnP4d5szbPfwqv9eKmG\n2bKkdFMu8iJnb62Vbza7XJmvfPe5koGwOurwqZ2hF1zIefrdrhIq8zXD3u1VjrKiuOgZ+7za\nj5OVq1UROXwdYJeXl0rYULbc4eVV+DP5SspOLr8hCUSytuuLNUE1qMygl1XnYnK50VAXP1Pa\nE7xYy7VanayhWrnm8puqdH3NpCd6tSwd7P+qP6WrFX3i6nIbXKx6olqVtuvl7tO9qVpfvQja\n8eoq4AeVotour5ZLc623y8+KbHmxytrAnNxlNYxbhtzXkkmJ1XKtOqjDF3kmcHkFGXV3bTDu\nephrKsSyTL5y6/KQuePl5arqVr/7y0uHb9UygDEvazwZwgeNc/UNZcvB83pfbF3vqrxqcVcN\nu/dklRU4Lid8i69ybnpZUgwzsfQcadirlaq8xjRCqw5bH9jR1aWUbXbXckdXVzvVbB1/9Ks1\nh21O5bKnAyD7bVtTq91dNNUS4j4vVv2TybutfV6uFjy5befxr6pV3noFstihVmp1zK3VTLDh\nFMl8ueXym/KyKDRWzyK+bE698dJGTxuToH3Dxo0mvmU5vRoTIf6FkenBYrGYBCFz44Y1xlPt\nPiO/4Po7ef9yyxpTVrcd6gLHhimzZm7sS8+2VMrZv82NW9l4sRW7Vo3okgZ26Rq8sZripfGn\nuomNFglsaRWDk7EXtux39omM06ehYsjJkj+4tg4VSqbWuEGkTk9/J+spXhhhTr/Rrm5dzG8v\nJjq0A+XYwLLmJq52btx0Ht5o4ufG9nKfFWDajWo1QokcovnSt6j5yeunP75+9Oj60QfLCz+5\nfvw318+eXz/6czQ+ZV4/+vn1o+fXTz46vH76U3Hj98Wln14//vnh6taPPmVdP/nR9ZM/un76\n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\nSt/Q90WJ5WZZ6rtJ5jlWbEVhFOaRG/i+GwN/BLftvjTNAxdSQOLtOQnuCmLH8awcWDJB4mnt\n+z6sIk9C286COHNsK44y04qMxEtdL8ncILlt9yW+BwvzIi+OHCcKvdA1s8AwzcBHxuKWWPDW\n3GdEuZOZUZ4ahuH4AI9xZCAtAKCL3VTuXtya+1I7iVMzyZHDIc9K/ciHF0rInxpZkJfZ7KEX\nBFEQGG7u06YQUi8jMPPAT1MTHiwrIe6tua8rX4a+L/Kj3EfYMozYcCI3DaM4zVw7sEBtlDrm\nbbuvK1/8HJlyZPqe78UOwmVk5WFmW2mUhEkAGHDb7uuKX27LfXkceWGUuZFhoNekZ8zMi+3I\nzIHOknzf96HHRmcS50bk2HkeO1GArDQMozTyk7JstLf7fMuLM990ALBdJ/Ph/mPk+H6aOGFi\nyr26yd83dF7W9b7UyeLADa3U8RPHNJLAAUT1Ug/oL1aqrZ3vm/p6h86n93Xf1P340Pd15cvU\n8/2h75t6Xruv+6aeX8756u3OV6ee5w2eN+6pLuU5duaEAIk5xfnICFPf943cjczM8N0wmO+b\n71Pv64oTu+bxU88vh77vRavndM1n5jx+Wvn+0PXJ21KPGDrfH/q+ofP9fe1fzvdtd9/gdSmM\nnyKViBPbc6iMgHzK8BLLCvLIdx1nvm+Y+zrb5S1Zx9DnX7rq89D1xKnXc4a+rzNfJo5Ph75v\nX/Xsqdebhr5v6nXloe+bev1q6PumXi8e+r6px/Ou9029rjz0+aap3zf1usrU75v6vu7Q9029\nfrWv+25LXXno+wZfx572waZedxy8jjnx8/JTr69N/b6h68BTz4/2dV/X/HzqePe24Oep14du\nS71p6Pu6ynfqdal93be39+662u/A+1FDr2Nf+2qD+92J708PLd+p1zHnuuiWddGJ10uGvm/q\n9bCh79tXnWHq9029Hra382sT3//Y230Trzft632/rvWm7t8Hmfb57Pm+ad23Nv+dv6c0f09p\nQvfN31Oav6fUJ27O31Oa308d476p72/M31Oav6d0m+6bv6c0f0+pT91ufg/zZr6/OPXvC83f\nU5rWvvz8PaX5e0p97pt6Xjt/T2nOV1/EfHXqed78PaX5vhfxvvl7SvP3lPrcN39PaVr3zd9T\nmr+n1Oe+qb83NN83f0/pNt03f09p/p7STbhv/p7StN5vm3q9af6e0vw9pT73Tb1ePH9Paf6e\n0k24b+p1lanfN/V93fl7SvP3lPbpX+bvKd3M+6Z+Xn7q9bWp3zd/T2n+ntKLiJ+nXh+6LfWm\n+XtK07pv/p7S/D2lMeibv6c0rfumXsecv6c0f0+pz33z95Tm7yn1uW/q+x/z95Sm9b7f/D2l\n+b593tfze0qvnxyf3csusvca/n4tPr64H5095P8c9ula96snx+9nl/cH/ev1++dn2Ul276xh\nyijGn6dNq6s9vO7v16KT7PQsuz/Cn+89jOnKRn9Gl6fRafTe8H++cu/44jQa6o9PXWWn2ck7\n2dXb+ehXPnmavfMwOjs+u1pdAMPiKLlfyn6cC9q0ay+8mr2fXTy8HPQvfZJ757/zO6UZDPRX\nxbSG+ev1y+ziHUW1+/792v0ozq6ijf589er43vHl1ZZ/tTvIur+8l8UQ3P2mv7cZeo0j7/v3\nGBqkzTFCfBjRZdf/fLG88G4caq9A+MnsLI1OFM7d6gt1pFONByM457FCV8XJ7TMCtAaE9ZF8\noHiyLiis+3tNXOgJeff+97rVn0XvqA5j33/X2T3wcO0JlsacddncaNFQC+0joNy+EGbYODoG\nWNlRTB0NqQxtTLvMDwe4sG3s2vbvMTD6gPF0TbQdCpV0SLlbhusFOIdJGWtZ3haVoH0H63bo\nMYbHrBUDax5/vxWnvZR+hs77NaKHjaKVP3ohDN37rsPF7YClJ+7sohLbIvk1K7jpaGGUktLI\nIbZXLNn0r53F3F0nR6PEy1rMqQXIau9Uaje7uSB9eXWL0Hovusouji7vn19cRfeywwfn5xdH\nD06isyvcf3R5fJUdXmZZSk8f/e7D6OT46v3lk/+z2pMNt72SX5yXAjpYLBatzTergzZM9R6m\nOkrOTx9kV8dXx+crP/2VKvEPLqLk6jjJus69YfPTD7LLq6Po6ipK3hl5KqX5pRpL1nP5q3BV\np9HJUQqtIB5yjO4jlB0scuiF7KB5WCVON6d9E+i2EbgymSYLe6PysD54uwX+vTbBHepm9OXq\n/enxZRZddmbg31UGbJbDWt1+YzltBwvbk4dJzzr7nd9ql4Du+7t61M+rzB6AU6/kJ+fn6dhU\n882v9ZxuDfUbcuCXN5h3Q60Yq7lRPB6f7l9c63huFBJY2/zC5kHo08KUDwdQZ6XZEc3xD6+L\nQL/KuINeE2xrdxNovnl+dT+7uDy6yE7P3822FdxmBrk+rq4R5Hor/Udd4cSOZNjJzthldwTz\n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\n1BrTqttn37x/dfXg7te+dv4gO7s4v4zePr+497X8/OI0zS6P751lF1/7xm/+hun8lvP1xW/8\nhv2NheN88zcWwdd/8zcW3/wt0/UsO7B+K/jGPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg8\n2DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg8\n2DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg8\n2DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg8\n2DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg8\n2DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNg82DzYPNgNG+yllz730ksv/7+Wg75srxpm\n8xVLu6I3XO1mR7uij6N3WXUyDhaLhUaafrvRPElLVwsh+lMt69CZp3NRp6dldn2clnv0AVuI\n78L7Fm60KEWfKVSpdnlOX1kvxTWaGaNzuoXlvZjX5eYuNrYZp1t0U1/76h5VLF34qjd0q+/F\nsxaz0eXTYthbeiGdVS2m1cIf3Stu5l9aCOsinRadahmwRbibOZEublfnWAs9rcGiZf4uWtbL\nxrosuov+6oRpnouNh7p73ixUtpDWSym7IIYWy+wl+17evoWeXu6Ai2N6aGqxzV48c5oXtJl8\ntoxj2hXO7jraou5cWgLxlrbYS8F6+cou9tILkPYKuluuVJ+rSxTvYji9HEKLujdPwbpDfaQW\nvrZoWWtYaQ6G7ZrfBWcyI7UP2nPqZrl0BObaSA2UduNNt/C9Gfbpou5d3GqXUDQUCOoCNnuN\n3DJOizPSPfJmGUg3JeN8zk0rVjAYoBf+mksVfTnfwo2BShWd0swWUc6Fio4cmwsV/eUzFyra\nhTsXKvpb+ECFCsYDzmUKdoFzmaK/RveKUBwb2q518tNzmaJddTZr3NIyRRscHKhIwcirJQy2\naEKfAkWbE+sFJbpoeBcYpY+jU7hlfrwlxumi2HNBgh1ntIJEm+0oN7/0iTvUWF545Sw6zS5f\nEjWKl767vPj6//Ld7OLy+Pxs+fenv/7gweH/rnLpzSh9eHJ1eRTF5+9m9gpHfqF69ej+cbrs\nOYjuZcvmq9GDB0dlxxvRw/T4/CiJHlw9vMhqF8/PLrOzq+XFLxUXL7Lk/CI9uryKLq6y1Siv\nxw+PT1I56mtJdJnJPz8p/qSlLi98NrmP+y+ys6OHZ2lmesvLX6xdVhbwheQ8z7PsKM2iq/sg\n9+FlVuvJjzOQ8HuXV8dJOVzRc3rv9OoIqz45Lgn+W8uuByfR2dXx2b1a9y/Uu0/Ok+hKYX9y\nfvrgJAMDjq6Oy1W9VmXYG2l0hcnP0+NcjvzZNEuYRYjL+go+R5cZ8r9E1xto/3Klr0b462n2\n7nGS/aerA0GfT0+jd7KLo/z8PAWpZ9n7KwYtO47P8pOHeveXK93HZ+9ml1enq4V/odJ5dZFB\nw4uer+g9RyoTVr2V4b5Su3wUXV5mV5caocves/OzPLo4XXZ/ZtmtUvF59doROJWW7FY7JGGf\nzNJjknXJxs9m6cOCr0cn2bvZycq06ChVqbKfv5dd3j9nhL3s0MX9haKDEfhXip4Gkf+tWm9N\n6J+7d5G9y9BRXNfJ+Ly4zlDxZdHRQMRXqp01Gj57//7R/SxKyankx6V4vozLp9lpDKY/gEM5\nTo4fwGhW9oTOy+PfLx3XO1mcnZTKchJdXh1dvn+WHF2dv5OVCl631NPo4vgqOiGHdfVwpQFf\nPD2/AJERw5SyS+fLl1ZdDGt+YdXXwJ2/rfXXCH3j7HzpPo7eu78ys89XLh6dX91frf7s4enR\n5cOLd48KT7XS9vIynMCKA+U1oSXldOVViG2lEOXFJbXabA+iB9H7kTbye9HZ76+uvoqrkOcq\ndp1H+dG78JQXUSmi8/fOVKv7QjEo59qXPboovrLs4Zn9xWUvJ6dlV6NnJzVcOoAouZKEQDlJ\nix7Gp8eXSiB+9QHuK2PrZ/BX6RpWnKZr4Ak4cHW+YssncfFehiC3uvApXKiq+5dw5fgMOk4c\nPD5LjxF5r5R5iIPq/eW1h2fHq/s+j2usAXwFHSQ9wQZ4tuji97OT43hllbXeio59odYpNe1L\ntR5V375Y75NaV6elqnt1WioaWJ9R1cPVjEJBq+v7gtpVWdxn1R65ss+rl9Vlfa7SIddUmby6\noMrkldVUZlGXQhwiLSjU8vLB8ckJAN6FwiHoRnb8bra8g9RmZX/LHiV4fekiu3xwDt2DVyGV\nU/VC7SO8dnRyXA71ZaUPngguW0F0X76Ea06EKikwcYU+L7PfWzY/cXlc+ve/ffkgS8iqEEIx\nZgQ5JFdi9csbfql6A9FydJbdg3W9uxrjl1tuKahsufHBOaip3/iLTTeWc/5K9Q45ykWdus8s\nYbKKEl8hhpfIQjiUq6PjByuFouVn7x+VAHOlAsvreZSQQd6PTk6ys9Lv/BLfq0rvk1CN6OpU\nwtMvkq6Qjh+TOzsSyGd1L1zI7z5UAPyr8MkXJWh8jf6Sna/Tn4oqfF6oLod7ig4G9xQdHO4p\neppwT6235stffe/8IktXRvTK752enK30/DPvnz+8un95hByjzJ4+p14TqUc1V/vkxfl7b6/y\ntTfw/3e+hf/8T//T//gP6kldAmyySuoOVsRcxSdHab6yCPy18vxIE6K38wti4Esv/Y//f1ZW\n5A0LoREA","type":"binary"}]
